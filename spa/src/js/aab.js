export default {
	lay: ( eggs, should ) => {
		if( eggs >= 0 && should > 0 ) {
			const fraction = eggs / should;
			if( fraction >= 1.0 ) return 97;
			else if( fraction >= 0.9 ) return 96;
			else if( fraction >= 0.8 ) return 95;
			else if( fraction >= 0.7 ) return 94;
			else if( fraction >= 0.6 ) return 93;
			else if( fraction >= 0.5 ) return 92;
			else if( fraction >= 0.4 ) return 91;
			else if( fraction >= 0.3 ) return 90;
			return 0;
		}
		return null;
	},
	brood: {
		layers: ( eggs, chicks ) => {
			if( eggs >= 5 && chicks >= 0 && chicks <= eggs ) {
				if( eggs <= 25) {
					return broodLayer[eggs][chicks];
				} else {
					// as aab
					const fraction = chicks / eggs;
					if( fraction >= 0.98 ) return 97;
					else if( fraction >= 0.90 ) return 96;
					else if( fraction >= 0.82 ) return 95;
					else if( fraction >= 0.70 ) return 94;
					else if( fraction >= 0.62 ) return 93;
					else if( fraction >= 0.50 ) return 92;
					else if( fraction >= 0.30 ) return 91;
					else if( fraction >= 0.14 ) return 90;
					return 0;
					/* or fitting max
					const fraction = 25/eggs;
					return broodLayers[ eggs * fraction ] [ chicks * fraction ];
					*/
				}
			}
			return null;
		},
		pigeons: ( group, broods, chicks ) => {
			if ( group >= 1 && group <= 4 && broods >= 2 && chicks >= 0 && chicks <= broods * 2 ) {
				if (broods <= 6) {
					return broodPigeon[ group ][ broods ][ chicks ];
				} else { // fit for 6 broods
					const relChicks = Math.round( 6 * chicks / broods );
					return broodPigeon[ group ][ 6 ][ relChicks ];
				}
			}
		}
	}
}

const broodLayer = { // eggs, chicks => points
	 5: { 0:0, 1:90, 2:90, 3:92, 4:94, 5:95 },
	 6: { 0:0, 1:90, 2:91, 3:91, 4:93, 5:95, 6:96 },
	 7: { 0:0, 1:0, 2:90, 3:91, 4:92, 5:94, 6:95, 7:97 },
	 8: { 0:0, 1:0, 2:90, 3:91, 4:91, 5:93, 6:94, 7:95, 8:97 },
	 9: { 0:0, 1:0, 2:90, 3:91, 4:91, 5:92, 6:93, 7:94, 8:95, 9:97 },
	10: { 0:0, 1:0, 2:90, 3:90, 4:91, 5:91, 6:92, 7:93, 8:94, 9:95, 10:97 },
	11: { 0:0, 1:0, 2:90, 3:90, 4:91, 5:91, 6:92, 7:93, 8:94, 9:95, 10:96, 11:97 },
	12: { 0:0, 1:0, 2:90, 3:90, 4:91, 5:91, 6:91, 7:92, 8:93, 9:94, 10:95, 11:96, 12:97 },
	13: { 0:0, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:92, 8:93, 9:93, 10:94, 11:95, 12:96, 13:97 },
	14: { 0:89, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:91, 8:92, 9:93, 10:94, 11:94, 12:95, 13:96, 14:97 },
	15: { 0:0, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:91, 8:92, 9:92, 10:93, 11:94, 12:94, 13:95, 14:96, 15:97 },
	16: { 0:0, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:91, 8:91, 9:92, 10:93, 11:93, 12:94, 13:95, 14:95, 15:96, 16:97 },
	17: { 0:0, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:91, 8:91, 9:92, 10:92, 11:93, 12:94, 13:94, 14:95, 15:95, 16:96, 17:97 },
	18: { 0:0, 1:0, 2:0, 3:90, 4:90, 5:91, 6:91, 7:91, 8:91, 9:91, 10:92, 11:93, 12:93, 13:94, 14:94, 15:95, 16:95, 17:96, 18:97 },
	19: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:91, 6:91, 7:91, 8:91, 9:91, 10:92, 11:92, 12:93, 13:93, 14:94, 15:94, 16:95, 17:95, 18:96, 19:97 },
	20: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:91, 8:91, 9:91, 10:91, 11:92, 12:92, 13:93, 14:93, 15:94, 16:94, 17:95, 18:95, 19:96, 20:97 },
	21: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:91, 8:91, 9:91, 10:91, 11:92, 12:92, 13:93, 14:93, 15:94, 16:94, 17:95, 18:95, 19:95, 20:96, 21:97 },
	22: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:91, 8:91, 9:91, 10:91, 11:91, 12:92, 13:92, 14:93, 15:93, 16:94, 17:94, 18:95, 19:95, 20:96, 21:96, 22:97 },
	23: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:91, 8:91, 9:91, 10:91, 11:91, 12:92, 13:92, 14:93, 15:93, 16:93, 17:94, 18:94, 19:95, 20:95, 21:96, 22:96, 23:97 },
	24: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:90, 8:91, 9:91, 10:91, 11:91, 12:91, 13:92, 14:92, 15:93, 16:93, 17:94, 18:94, 19:94, 20:95, 21:95, 22:96, 23:96, 24:97 },
	25: { 0:0, 1:0, 2:0, 3:0, 4:90, 5:90, 6:90, 7:90, 8:91, 9:91, 10:91, 11:91, 12:91, 13:92, 14:92, 15:92, 16:93, 17:93, 18:94, 19:94, 20:94, 21:95, 22:95, 23:96, 24:96, 25:97 }, // extra nr
}

const broodPigeon = { // group, broods, chicks => points
	1: {
		2: { 0:0, 1:91, 2:93, 3:94, 4:96 }, // To few broods....
 		3: { 0:0, 1:90, 2:92, 3:93, 4:94, 5:95, 6:97 },
		4: { 0:0, 1:90, 2:91, 3:92, 4:93, 5:92, 6:94, 7:96, 8:97 },
		5: { 0:0, 1:0, 2:90, 3:91, 4:92, 5:93, 6:93, 7:94, 8:95, 9:96, 10:97 },
		6: { 0:0, 1:0, 2:90, 3:91, 4:92, 5:92, 6:93, 7:93, 8:94, 9:94, 10:95, 11:96, 12:97 },
	},
	2: {
		2: { 0:0, 1:90, 2:92, 3:94, 4:96 }, // To few broods....
		3: { 0:0, 1:0, 2:91, 3:92, 4:93, 5:94, 6:97 },
		4: { 0:0, 1:0, 2:90, 3:91, 4:92, 5:93, 6:94, 7:95, 8:97 },
		5: { 0:0, 1:0, 2:0, 3:90, 4:91, 5:92, 6:93, 7:93, 8:94, 9:95, 10:97 },
		6: { 0:0, 1:0, 2:0, 3:90, 4:91, 5:92, 6:92, 7:93, 8:93, 9:94, 10:94, 11:96, 12:97 },
	},
	3: {
		2: { 0:0, 1:0, 2:92, 3:93, 4:96 }, // To few broods....
		3: { 0:0, 1:0, 2:90, 3:92, 4:93, 5:94, 6:97 },
		4: { 0:0, 1:0, 2: 0, 3:91, 4:92, 5:93, 6:93, 7:94, 8:97 },
		5: { 0:0, 1:0, 2: 0, 3:90, 4:91, 5:92, 6:92, 7:93, 8:94, 9:94, 10:97 },
		6: { 0:0, 1:0, 2: 0, 3: 0, 4:90, 5:91, 6:92, 7:92, 8:93, 9:93, 10:94, 11:95, 12:97 },
	},
	4: {
		2: { 0:0, 1:0, 2:92, 3:93, 4:96 }, // To few broods....
		3: { 0:0, 1:0, 2:90, 3:92, 4:93, 5:94, 6:97 },
		4: { 0:0, 1:0, 2: 0, 3:91, 4:92, 5:93, 6:93, 7:94, 8:97 },
		5: { 0:0, 1:0, 2: 0, 3:90, 4:91, 5:92, 6:92, 7:93, 8:94, 9:94, 10:97 },
		6: { 0:0, 1:0, 2: 0, 3: 0, 4:90, 5:91, 6:92, 7:92, 8:93, 9:93, 10:94, 11:95, 12:97 },
	},
}

